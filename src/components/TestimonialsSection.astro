---
const { title, testimonials } = Astro.props
---

<section class="bs-container bs-mt-lg">
  <!-- Title -->
  {title && <h2 class="bs-h2 text-center md:text-left mb-8">{title}</h2>}

  <!-- Testimonials Grid -->
  <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-4 gap-4">
    {testimonials.map((item, index) => (
      <blockquote class="testimonial-card bg-bs-surface-2 border border-bs-surface-3 p-4 rounded-md flex flex-col gap-3" data-index={index}>
        
        {item.title && <h4 class="text-base md:text-lg font-semibold">{item.title}</h4>}
        {item.date && <span class="text-xs text-bs-foreground-muted">{item.date}</span>}

        <p class="quote text-sm lg:text-lg line-clamp" set:html={item.quote}></p>

        {item.quote.length > 50 && <button class="toggle-btn text-bs-primary font-semibold text-sm mt-1 self-start hover:underline"><+></button>}

        {item.image && <img src={item.image} alt={`Image for ${item.title || item.handle}`} class="rounded-md w-full object-cover max-h-48 mt-2" />}

        {item.videoUrl && <a href={item.videoUrl} target="_blank" rel="noopener noreferrer" class="text-bs-primary font-semibold mt-2 inline-block">TikTok â†—</a>}

        <cite class="not-italic text-bs-foreground-dark text-sm font-semibold mt-2">@{item.handle}</cite>

      </blockquote>
    ))}
  </div>
</section>

<script is:raw>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".testimonial-card").forEach(card => {
      const btn = card.querySelector(".toggle-btn");
      const p = card.querySelector(".quote");
      if(btn){
        btn.addEventListener("click", () => {
          p.classList.toggle("line-clamp");
          btn.textContent = p.classList.contains("line-clamp") ? "<+>" : "< - >";
        });
      }
    });
  });
</script>

<style>
  /* Line clamp per testi lunghi */
  .line-clamp {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
